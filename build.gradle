/*
 * Copyright 2014-2015 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


plugins {
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'nebula.plugin-plugin' version '5.1.1'
    id 'org.ysb33r.gradletest' version '0.5.4'
}

description 'Gradle plugin to ease use of ivy-publish and maven-publish'
group = 'com.netflix.nebula'

contacts {
    'justin@halfempty.org' {
        moniker 'Justin Ryan'
        github 'quidryan'
    }
    'rob.spieldenner@gmail.com' {
        moniker 'Rob Spieldenner'
        github 'rspieldenner'
    }
}

// Write the plugin's classpath to a file to share with the tests
task createClasspathManifest {
    def outputDir = file("$buildDir/$name")

    inputs.files sourceSets.main.runtimeClasspath
    outputs.dir outputDir

    doLast {
        outputDir.mkdirs()
        file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
    }
}

dependencies {
    compile 'com.netflix.nebula:gradle-info-plugin:3.5.0', optional
    compile 'com.netflix.nebula:gradle-contacts-plugin:3.0.1', optional

    testCompile gradleTestKit()
    testRuntime files(tasks.createClasspathManifest)
}

pluginBundle {
    website = 'https://github.com/nebula-plugins/nebula-publishing-plugin'
    vcsUrl = 'https://github.com/nebula-plugins/nebula-publishing-plugin.git'
    description = 'Plugins to ease maven-publish and ivy-publish configuration'

    //noinspection GroovyAssignabilityCheck
    plugins {
        mavenApacheLicense {
            id = 'nebula.maven-apache-license'
            displayName = 'Nebula Maven Apache License Plugin'
            description = 'Add the Apache v2 license to the pom'
            tags = ['nebula', 'publish', 'maven', 'apache', 'license']
        }

        mavenBasePublish {
            id = 'nebula.maven-base-publish'
            displayName = 'Nebula Maven Base Publish Plugin'
            description = 'Setup nebula maven publication. Add a name and description element to the published POM'
            tags = ['nebula', 'publish', 'maven']
        }

        mavenExcludes {
            id = 'nebula.maven-excludes'
            displayName = 'Nebula Maven Excludes Plugin'
            description = 'Insert excludes into the pom when individual dependencies have exclude statements'
            tags = ['nebula', 'publish', 'maven']
        }

        mavenManifest {
            id = 'nebula.maven-manifest'
            displayName = 'Nebula Maven Manifest Plugin'
            description = 'Append additional information from our info plugin to the properties section of the pom'
            tags = ['nebula', 'publish', 'maven']
        }

        mavenPublish {
            id = 'nebula.maven-publish'
            displayName = 'Nebula Maven Publish Plugin'
            description = 'Applies our opinions for maven publications'
            tags = ['nebula', 'publish', 'maven']
        }

        mavenResolvedDependencies {
            id = 'nebula.maven-resolved-dependencies'
            displayName = 'Nebula Maven Resolved Dependencies Plugin'
            description = 'Built on top of nebula.maven-dependencies, replacing dynamic versions with the actual resolved versions'
            tags = ['nebula', 'publish', 'maven']
        }

        mavenScm {
            id = 'nebula.maven-scm'
            displayName = 'Nebula Maven SCM Plugin'
            description = 'Adds SCM info to the pom'
            tags = ['nebula', 'publish', 'maven']
        }

        ivyBasePublish {
            id = 'nebula.ivy-base-publish'
            displayName = 'Nebula Ivy Base Publish Plugin'
            description = 'Setup nebulaIvy IvyPublication'
            tags = ['nebula', 'publish', 'ivy']
        }

        ivyExcludes {
            id = 'nebula.ivy-excludes'
            displayName = 'Nebula Ivy Excludes Plugin'
            description = 'Insert excludes into the ivy.xml when individual dependencies have exclude statements'
            tags = ['nebula', 'publish', 'ivy']
        }

        ivyManifest {
            id = 'nebula.ivy-manifest'
            displayName = 'Nebula Ivy Manifest Plugin'
            description = 'Append additional information from our info plugin to the info section of the ivy.xml'
            tags = ['nebula', 'publish', 'ivy']
        }

        ivyPublish {
            id = 'nebula.ivy-publish'
            displayName = 'Nebula Ivy Publish Plugin'
            description = 'Applies our opinions for ivy publications'
            tags = ['nebula', 'publish', 'ivy']
        }

        ivyResolvedDependencies {
            id = 'nebula.ivy-resolved-dependencies'
            displayName = 'Nebula Ivy Resolved Dependencies Plugin'
            description = 'Built on top of nebula.ivy-dependencies, replacing dynamic versions with the actual resolved versions'
            tags = ['nebula', 'publish', 'ivy']
        }

        compileApi {
            id = 'nebula.compile-api'
            displayName = 'Nebula compileApi Scope Plugin'
            description = 'Adds a compileApi configuration, dependencies in this configuration will be put in compile conf/scope of ivy/maven'
            tags = ['nebula', 'publish', 'api-scope', 'compileApi']
        }

        javadocJar {
            id = 'nebula.javadoc-jar'
            displayName = 'Nebula Javadoc Jar Publishing plugin'
            description = 'Create a javadocJar task to package up the javadoc and add it to the publications'
            tags = ['nebula', 'publish', 'javadoc']
        }

        groovydocJar {
            id = 'nebula.groovydoc-jar'
            displayName = 'Nebula Groovydoc Jar Publishing plugin'
            description = 'Create a groovydocJar task to package up the groovydoc and add it to the publications'
            tags = ['nebula', 'publish', 'groovydoc']
        }

        scaladocJar {
            id = 'nebula.scaladoc-jar'
            displayName = 'Nebula Scaladoc Jar Publishing plugin'
            description = 'Create a scaladocJar task to package up the scaladoc and add it to the publications'
            tags = ['nebula', 'publish', 'scaladoc']
        }

        sourceJar {
            id = 'nebula.source-jar'
            displayName = 'Nebula Source Jar Publishing plugin'
            description = 'Create a sourceJar task to package up the project\'s source code and add it to the publications'
            tags = ['nebula', 'publish', 'source']
        }

        testJar {
            id = 'nebula.test-jar'
            displayName = 'Nebula Test Jar Publishing plugin'
            description = 'Create a testJar task to package up test classes and add it to the publications'
            tags = ['nebula', 'publish', 'test']
        }
    }

    mavenCoordinates {
        groupId = 'com.netflix.nebula'
        artifactId = 'nebula-publishing-plugin'
    }
}

gradleTest {
    versions '2.2.1', '2.3', '2.4', '2.5', '2.6', '2.7', '2.8'
}

gradleTest.dependsOn(jar)
gradleTest.doFirst {
    project.version = project.version.toString()
}
